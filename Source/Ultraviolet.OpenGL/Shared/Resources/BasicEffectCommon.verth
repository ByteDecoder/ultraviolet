#ifdef INCLUDE_MATRICES

uniform mat4 World;
uniform mat4 View;
uniform mat4 Projection;
uniform mat4 WorldViewProj;
uniform vec3 EyePosition;

#endif

#ifdef INCLUDE_FOG

uniform float FogStart;
uniform float FogEnd;
uniform vec4 FogColor;

float compute_fog_factor(float d)
{
    return clamp((d - FogStart) / (FogEnd - FogStart), 0, 1);
}

#endif

#ifdef INCLUDE_LIGHTING

uniform vec4 DiffuseColor = vec4(1, 1, 1, 1);

#endif

#ifdef INCLUDE_TEXTURES

vec2 flip_texture_coords(vec2 coords)
{
    return vec2(coords.x, 1.0 - coords.y);
}

#endif

#ifdef INCLUDE_SRGB

uniform bool SrgbColor;
    
#includeres "Ultraviolet.OpenGL.Resources.SrgbConversion.glsl" executing

vec4 convert_color(vec4 c)
{
    return SrgbColor ? srgb2linear(c) : c;
}

#endif